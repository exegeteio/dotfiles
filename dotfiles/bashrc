#!/usr/bin/env bash

# DEBUG=1
# export PS4='+[${SECONDS}s][${BASH_SOURCE}:${LINENO}]: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'; set -x;

[ -z "$DEBUG" ] || echo "Starting .bashrc"

# Brew setup first!
export PATH="$HOME/.brew/bin:/opt/homebrew/bin:$PATH"

# Silence warning on MacOS.
export BASH_SILENCE_DEPRECATION_WARNING=1

# Set vim mode.
set -o vi

sh_combined="/tmp/shrc-combined_$(date +%F).bash"

if [ ! -e "$sh_combined" ]; then
  echo "Generating combined sh config:  $sh_combined"
  (
    cd ~/.config/dotfiles/shellrc || exit 1
    for rcfile in $(find ./ -type f -o -type l | sort -n); do
      cat "$rcfile" >> $sh_combined
    done
  )
  [ -x "$(which rbenv)" ] && rbenv init - "$0" >> $sh_combined
  [ -f ~/.fzf.bash ] && cat ~/.fzf.bash >> $sh_combined
  [ -x "$(which brew)" ] && [ -f "$(brew --prefix fzf)/shell/completion.bash" ] && cat "$(brew --prefix fzf)/shell/completion.bash" >> $sh_combined
  [ -x "$(which brew)" ] && [ -f "$(brew --prefix fzf)/shell/key-bindings.bash" ] && cat "$(brew --prefix fzf)/shell/key-bindings.bash" >> $sh_combined
  [ -f "$HOME/.cargo/env" ] && cat "$HOME/.cargo/env" >> $sh_combined
  [ -f "$HOME/.git-prompt.sh" ] && cat "$HOME/.git-prompt.sh" >> $sh_combined

  # Always use my env settings last.
  cat "$HOME/.config/dotfiles/shellrc/00-env" >> $sh_combined

  echo "Done combined bash config!"
  [ -z "$DEBUG" ] || echo "Done combined sh config!"
else
  [ -z "$DEBUG" ] || echo "Skipped combining sh config!"
fi
[ -z "$DEBUG" ] || echo "Sourcing $sh_combined"
source "$sh_combined"
[ -z "$DEBUG" ] || echo "Done sourcing $sh_combined"
