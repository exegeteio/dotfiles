#!/usr/bin/env bash
# If running interactively, do not do anything.
[[ -z "$DEBUG" ]] || echo "Checking interactive"
[[ ! -o interactive ]] && return

# Brew setup first!
export PATH="$HOME/.brew/bin:/opt/homebrew/bin:$PATH"

# Need these for `n` and `b`.
[[ -z "$DEBUG" ]] || echo "Loading zsh promptinit"
autoload -Uz compinit promptinit

[[ -z "$DEBUG" ]] || echo "Adding zsh site-functions from brew FPATH"
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

sh_combined="/tmp/shrc-combined_$(date +%F).zsh"

if [ ! -e "$sh_combined" ]; then
  echo "Generating combined sh config:  $sh_combined"
  (
    cd ~/.config/dotfiles/shellrc || exit 1
    for rcfile in $(find ./ -type f -o -type l | sort -n); do
      cat "$rcfile" >> $sh_combined
    done
  )
  [ -x "$(which rbenv)" ] && rbenv init - "$0" >> $sh_combined
  [ -f ~/.fzf.zsh ] && cat ~/.fzf.zsh >> $sh_combined
  [ -x "$(which brew)" ] && [ -f "$(brew --prefix fzf)/shell/completion.zsh" ] && cat "$(brew --prefix fzf)/shell/completion.zsh" >> $sh_combined
  [ -x "$(which brew)" ] && [ -f "$(brew --prefix fzf)/shell/key-bindings.zsh" ] && cat "$(brew --prefix fzf)/shell/key-bindings.zsh" >> $sh_combined
  [ -f "$HOME/.cargo/env" ] && cat "$HOME/.cargo/env" >> $sh_combined
  [ -f "$HOME/.git-prompt.sh" ] && cat "$HOME/.git-prompt.sh" >> $sh_combined

  # Always use my env settings last.
  cat "$HOME/.config/dotfiles/shellrc/00-env" >> $sh_combined

  echo "Done combined zsh config!"
  [ -z "$DEBUG" ] || echo "Done combined sh config!"
else
  [ -z "$DEBUG" ] || echo "Skipped combining sh config!"
fi

[ -z "$DEBUG" ] || echo "Sourcing $sh_combined"
source "$sh_combined"
[ -z "$DEBUG" ] || echo "Done sourcing $sh_combined"

# Comes late for tab-completing CDPATH.
compinit

#########
# vi mode
#########

bindkey -v

# switch to command mode with jj
bindkey '^j' vi-cmd-mode

# `v` is already mapped to visual mode, so we need to use a different key to
# open Vim
bindkey -M vicmd "^V" edit-command-line

# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1

# incremental search in insert mode
bindkey "^F" history-incremental-search-forward
bindkey "^R" history-incremental-search-backward

# beginning search with arrow keys and j/k
# bindkey "^[OA" up-line-or-beginning-search
# bindkey "^[OB" down-line-or-beginning-search
# bindkey -M vicmd "k" up-line-or-beginning-search
# bindkey -M vicmd "j" down-line-or-beginning-search

# beginning search in insert mode, redundant with the up/down arrows above
# but a little easier to press.
bindkey "^P" history-search-backward
bindkey "^N" history-search-forward

# incremental search in vi command mode
bindkey -M vicmd '?' history-incremental-search-backward
bindkey -M vicmd '/' history-incremental-search-forward
# navigate matches in incremental search
bindkey -M viins '^R' history-incremental-pattern-search-backward
bindkey -M viins '^F' history-incremental-pattern-search-forward


[[ -z "$DEBUG" ]] || echo "Loading fzf custom key-bindings"
if [[ -n "$FZF" ]]; then
  bindkey "^R" fzf-history-widget
  bindkey "^T" fzf-file-widget
  bindkey -M vicmd '?' fzf-history-widget
  bindkey -M viins "^R" fzf-history-widget
  bindkey -M viins "^t" fzf-file-widget
fi
