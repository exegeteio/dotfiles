#!/usr/bin/env bash

[ -z "$DEBUG" ] || echo "Setting up ENV..."
export XDG_CONFIG_HOME="$HOME/.config/"
export DOTFILES_PATH="$XDG_CONFIG_HOME/dotfiles"
export PATH="$HOME/bin:$XDG_CONFIG_HOME/dotfiles/bin:$HOME/.cargo/bin:$HOME/.brew/bin:/home/linuxbrew/.linuxbrew/bin:$HOME/go/bin:$HOME/.rbenv/bin:$HOME/.deno/bin:$PATH"
export CDPATH="$HOME:$HOME/code/:$HOME/code/github/:$HOME/code/github/exegeteio/:$HOME/code/gitlab/:$HOME/Desktop/"
if [ ! -z "$WORKSPACE" ]; then
  export CDPATH="$WORKSPACE:$WORKSPACE/code/:$WORKSPACE/code/github/:$WORKSPACE/code/github/exegeteio/:$WORKSPACE/code/gitlab/:$WORKSPACE/Desktop/"
fi

# Prettier Docker commands, parallel builds.
export DOCKER_BUILDKIT=1

# Allow connect back to rails from inside Docker.
export RAILS_DEVELOPMENT_HOSTS=host.docker.internal,localhost,.ngrok.io

# Only set the port if not already set.  Good for devcontainers.
[[ -z "$PORT" ]] && export PORT=3000

# Setup Golang
export GOPATH=$HOME/code/go
export GOBIN=$GOPATH/bin
export PATH=$GOBIN:$PATH

# Rancher Desktop
[[ -d "$HOME/.rd/bin" ]] && export PATH="$HOME/.rd/bin:$PATH"

# For tmux workspaces.
if [ -z "$CODE_PATH" ]; then
  export CODE_PATH="$HOME/code"
fi

[ -x "$(which bat)" ] && export PAGER="bat --plain"

# Function to remove duplicates from PATH
function remove_path_duplicates() {
  # Declare an associative array to hold the paths
  typeset -A path_hash

  # Split the PATH variable into an array based on the colon separator
  local -a path_array=("${(@s/:/)PATH}")

  # Clear the PATH variable to start fresh
  new_path=""

  # Iterate over the path_array elements
  for path in $path_array; do
    # Check if the path is not already in the associative array
    if [[ -z $path_hash[$path] ]]; then
      # If not, add it to the associative array and to the PATH
      path_hash[$path]=1
      if [[ ! -d "$path" ]]; then
        [[ -z "$DEBUG" ]] || echo "Not adding $path to PATH because it does not exist!"
      elif [[ -n $new_path ]]; then
        new_path="$new_path:$path"
      else
        new_path="$path"
      fi
    fi
  done

  export PATH="$new_path"
}

# Call the function to remove duplicates from PATH
[ -z "$DEBUG" ] || echo "Removing duplicates from PATH..."
[ -z "$DEBUG" ] || echo "Went from ${#PATH} ..."
remove_path_duplicates
[ -z "$DEBUG" ] || echo "To ${#PATH} ..."

[ -z "$DEBUG" ] || echo "Done setting up ENV..."
